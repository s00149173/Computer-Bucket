@using Microsoft.Ajax.Utilities
@model IEnumerable<computerbucket.Product>

@{
    ViewBag.Title = "Products";
}
<div class="pageHeading">
    <h2 style="margin-top: 0;">Browse all products here</h2>
    <p>
        You can use the search box at the top right corner to find the product      
    </p>
</div>
<div class="container">
    <div id="productSearchInfo" class="row">
        <div class=" col-md-12">
            @if (!(ViewBag.searchTerm).Equals(" "))
            {
                <h4>@Model.Count(x => true) @ViewBag.searchTerm</h4>
            }
            else
            {
                <h4>Listing all products</h4>
            }
        </div>
    </div>

    @foreach (var item in Model)
    {
        <div class="product">
            <div class="row">
                <div class="col-md-2">
                    <a href="../Images/ProductImages/@item.ProductID.ToString()@ViewBag.jpg" class='cloud-zoom' id='zoom1'
                       rel="adjustX: 10, adjustY:-4, softFocus:true">
                        <img src="../Images/ProductImages/@item.ProductID.ToString()@ViewBag.jpg" alt='' align="left" title="" style="width: 150px; height: 150px; background-image:url(/Images/my_computer_w.png)" />
                    </a>
                </div>

                <div class="col-md-5">
                    <h4 class="product_h4">@Html.DisplayFor(modelItem => item.ProductName)</h4>
                    <h5 class="span_red">Price : @Html.DisplayFor(modelItem => item.UnitPrice)</h5>
                </div>

                <div class="col-md-3">
                    Units in Stock : @Html.DisplayFor(modelItem => item.UnitsInStock)<br /><br />
                    Units on Order @Html.DisplayFor(modelItem => item.UnitsOnOrder)

                </div>
                <div class="col-md-1">
                    @Html.ActionLink("Add to basket", "InsertProduct", "Orders", new { id = item.ProductID }, new { @class = "btn btn-info" })
                </div>
            </div>
        </div>

    }

</div>